import { useState } from 'react';export type StateType<ACTION extends string> = {    [key: string]: any;}type CustomState<STATE, ACTION extends string> = {    state: STATE,    updateState: (...actions: StateType<ACTION>[]) => void,}export function useCustomState<STATE, ACTION extends string>(initialValue: STATE): CustomState<STATE, ACTION> {    const [state, setState] = useState<STATE>(initialValue);    function updateState(...actions: StateType<ACTION>[]) {        setState(prevState => ({            ...prevState,            ...actions,        }))    }    return {state, updateState};}