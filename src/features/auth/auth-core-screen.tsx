import { StyleSheet, TouchableOpacity, View, Text } from 'react-native';import React, { useEffect } from 'react';import { AutoScaledImage } from '@/components/image';import { SafeAreaView } from 'react-native-safe-area-context';import { GoogleSigninButton } from '@react-native-google-signin/google-signin';import { configGoogleSignIn, CustomGoogleSignIn, onGoogleButtonPress } from '@/features/auth/sign-in-google';import { FirebaseAuthTypes } from '@react-native-firebase/auth';import { setUserName, useAppDispatch } from '@/store';import { Ionicons } from '@expo/vector-icons';import { themedColors } from '@/constants';type SignInButtonProps = {    title: string;    icon: React.ReactElement;    onPress: undefined | (() => void);}function SignInButton({ title, icon, onPress }: SignInButtonProps) {    return (        <View >            <TouchableOpacity onPress={onPress} >                <View style={buttonStyles.container} >                    <View style={buttonStyles.innerContainer}>                    {icon}                    <Text style={buttonStyles.text} >{title}</Text >                    </View>                </View >            </TouchableOpacity >        </View >    );}const buttonStyles = StyleSheet.create({    container: {        backgroundColor: 'white',        justifyContent: 'center',        alignItems: 'center',        paddingVertical: 12,        borderRadius: 32,    },    innerContainer: {        width: '75%',        alignItems: 'center',        justifyContent: 'flex-start',        flexDirection: 'row',        gap: 12,    },    text: {        fontSize: 24,        lineHeight: 30,        color: 'grey',        fontFamily: 'Poppins_400Regular',    },});export default function AuthCoreScreen() {    const [isSignUp, setSignUp] = React.useState(false);    const dispatch = useAppDispatch();    function onGoogleSignIn() {        onGoogleButtonPress().then((value) => {            onGoogleSignInResult(value);        })    }    function onGoogleSignInResult(credentials: FirebaseAuthTypes.UserCredential | undefined) {        if (!credentials || !credentials.user || !credentials.user.displayName) {            alert('Failed to sign in with Google');            return;        }        const firstName = credentials.user.displayName.split(' ')[0];        dispatch(setUserName(firstName));    }    useEffect(() => {        configGoogleSignIn();    }, []);    return (        <SafeAreaView style={styles.container} >            <View style={styles.container} >                <View style={styles.header} >                    <TouchableOpacity >                        <Text style={styles.skipText} >                            SKIP                        </Text >                    </TouchableOpacity >                </View >                <View style={styles.imageContainer} >                    <AutoScaledImage source={require('@/assets/images/average_joe_logo_white.png')}                                     widthPercent={'100%'} />                </View >                <View style={styles.titleContainer}>                    <Text style={styles.titleText}>                        WELCOME TO JOE'S!                    </Text>                </View>                <View style={styles.buttonContainer} >                    <SignInButton                        title={'Continue with Email'}                        icon={                            <Ionicons name={'mail'} size={26} color={'black'} style={{ marginTop: -3 }} />                        }                        onPress={() => {                        }}                    />                    <SignInButton                        title={'Sign in with Google'}                        icon={                            <Ionicons name={'logo-google'} size={26} style={{ marginTop: -3 }} />                        }                        onPress={onGoogleSignIn}                    />                    <SignInButton                        title={'Sign in with Apple'}                        icon={                            <Ionicons name={'logo-apple'} size={26} style={{ marginTop: -6 }} />                        }                        onPress={undefined}                    />                </View >            </View >        </SafeAreaView >    );}const styles = StyleSheet.create({    container: {        backgroundColor: '#1A1313',        width: '100%',        height: '100%',        flexDirection: 'column',        gap: 16,    },    header: {        width: '100%',        alignItems: 'flex-end',        padding: 16,    },    skipText: {        color: '#fff',        fontSize: 18,        fontFamily: 'Poppins_400Regular',    },    imageContainer: {        padding: 64,    },    titleContainer: {        justifyContent: 'center',        alignItems: 'center',        borderBottomWidth: 2,        borderBottomColor: themedColors.primary,        marginHorizontal: 32,    },    titleText: {        fontSize: 24,        fontFamily: 'Poppins_700Bold',        color: themedColors.primary    },    buttonContainer: {        margin: 32,        gap: 16,    },});// {/*<LayoutAnimationConfig skipEntering>*/}// {/*    {isSignUp*/}// {/*        ? <SignUp setSignIn={() => setSignUp(false)} />*/}// {/*        : <SignIn setSignUp={() => setSignUp(true)} />*/}// {/*    }*/}// {/*</LayoutAnimationConfig>*/}