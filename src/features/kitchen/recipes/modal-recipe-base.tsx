import React from 'react';import { ModalProps as RNModalProps } from 'react-native/Libraries/Modal/Modal';import { LayoutAnimationConfig } from 'react-native-reanimated';import { ThemedModal } from '@/components/modal';import { AddRecipe } from '@/features/kitchen/recipes/modal-add-recipe';import { SearchBlend } from '@/features/kitchen/recipes/modal-search-blend';import { FormState } from '@/features/kitchen/recipes/types';import { useCustomState } from '@/hooks/useCustomState';type AddBeanModalProps = RNModalProps & {    isOpen: boolean;    onClose: () => void;    onSaveCallback?: (id: string) => void;};export const AddRecipeModal = ({ isOpen, onClose, onSaveCallback  }: AddBeanModalProps) => {    const { state, updateState } = useCustomState<FormState>({        isSearch: false,        roaster: '',        blendName: '',        tastingNotes: '',        dose: '',        yield: '',        time: '',        rating: 0,    });    return (        <ThemedModal isOpen={isOpen} close={onClose}>            <LayoutAnimationConfig skipEntering>                {state.isSearch ? (                    <SearchBlend                        updateParentState={updateState}                    />                ) : (                    <AddRecipe                        parentState={state}                        updateParentState={updateState}                        close={onClose}                        onSaveCallback={onSaveCallback}                    />                )}            </LayoutAnimationConfig>        </ThemedModal>    );};