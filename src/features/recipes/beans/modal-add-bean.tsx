import Ionicons from '@expo/vector-icons/Ionicons';import React from 'react';import {    Button,    StyleSheet,    TouchableWithoutFeedback,    View,} from 'react-native';import { Rating } from 'react-native-ratings';import Animated, { SlideInLeft, SlideOutLeft } from 'react-native-reanimated';import { ThemedInput } from '@/components/input';import { ThemedText } from '@/components/text/themed-text';import { themedColors } from '@/constants';import { UserBean } from '@/domain';import { FormState, FormStateAction } from '@/features/recipes/beans/types';import { addUserBean, useAppDispatch } from '@/store';type AddBeanProps = {    formState: FormState;    updateState: (name: FormStateAction, value: any) => void;    close: () => void;};export function AddBean({ formState, updateState, close }: AddBeanProps) {    const dispatch = useAppDispatch();    const onSave = () => {        const userBean: UserBean = {            id: new Date().toLocaleString(),            roasterName: formState.roaster,            blendName: formState.blendName,            tastingNotes: formState.tastingNotes,            recipe: {                dose: formState.dose,                yield: formState.yield,                time: formState.time,            },            rating: formState.rating,        };        console.log(userBean);        dispatch(addUserBean(userBean));        close();    };    return (        <TouchableWithoutFeedback>            <Animated.View                entering={SlideInLeft.delay(50)}                exiting={SlideOutLeft}            >                <Animated.View style={styles.modalInner}>                    <View style={styles.titleContainer}>                        <ThemedText type={'subtitle'}>                            Add Your Beans                        </ThemedText>                        <Ionicons.Button                            name="search"                            size={24}                            backgroundColor={'transparent'}                            color={themedColors.tertiary}                            onPress={() => updateState('isSearch', true)}                        />                    </View>                    <ThemedText type={'default'} style={styles.titleContainer}>                        Add your bean profile, or use the search tool above.                    </ThemedText>                    <View style={styles.content}>                        <ThemedInput                            onValueChange={(text) =>                                updateState('blendName', text)                            }                            placeholder="Blend Name"                            value={formState.blendName}                        />                        <ThemedInput                            onValueChange={(text) =>                                updateState('roaster', text)                            }                            placeholder="Roaster"                            value={formState.roaster}                        />                        <ThemedInput                            onValueChange={(text) =>                                updateState('tastingNotes', text)                            }                            placeholder="Tasting Notes"                            value={formState.tastingNotes}                        />                        <ThemedInput                            onValueChange={(text) => updateState('dose', text)}                            placeholder="Dose"                            value={formState.dose}                        />                        <ThemedInput                            onValueChange={(text) => updateState('yield', text)}                            placeholder="Yield"                            value={formState.yield}                        />                        <ThemedInput                            onValueChange={(text) => updateState('time', text)}                            placeholder="Time"                            value={formState.time}                        />                        <Rating                            type="heart"                            ratingCount={5}                            imageSize={40}                            startingValue={0}                            jumpValue={1}                            onFinishRating={(rating: number) =>                                updateState('rating', rating)                            }                        />                        <Button                            title={'SAVE'}                            color={themedColors.primary}                            onPress={onSave}                        />                    </View>                </Animated.View>            </Animated.View>        </TouchableWithoutFeedback>    );}const styles = StyleSheet.create({    container: {        width: '100%',        height: '100%',    },    titleContainer: {        flexDirection: 'row',        alignItems: 'center',        marginBottom: 16,        justifyContent: 'space-between',    },    content: {        gap: 8,    },    modalInner: {        width: '100%',        paddingHorizontal: 16,        paddingVertical: 12,        backgroundColor: 'white',        borderRadius: 8,    },});