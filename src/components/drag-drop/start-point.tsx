import { ReactNode } from 'react';import { Data, useDragndropContext } from '@/components/drag-drop/context';import { Gesture, GestureDetector, GestureHandlerRootView } from 'react-native-gesture-handler';import { Animated, Dimensions, StyleSheet } from 'react-native';import { Rect } from "@/components/drag-drop/selection";const OFFSET = 275;export const DragndropStartPoint = (    {        children,        data,    }: {        children: ReactNode;        data: Data;    }) => {    const {pos, onDragStart, onDragEnd} = useDragndropContext();    const dragGesture = Gesture.Pan()        .onStart(() => {            onDragStart(data);        })        .onUpdate((evt) => {            const {absoluteX, absoluteY} = evt;            pos.x.setValue(absoluteX);            pos.y.setValue(absoluteY - OFFSET);        })        .onEnd(() => {            const convert = (value: Animated.Value) => Number(JSON.stringify(value));            onDragEnd({x: convert(pos.x), y: convert(pos.y) + OFFSET});            console.log('onEnd:', convert(pos.x), convert(pos.y));        })        .runOnJS(true);    return (        <GestureHandlerRootView style={styles.container}>            <GestureDetector gesture={dragGesture}>                <Rect text={'CAPPUCCINO'} />                <Rect text={'LATTE'} />                <Rect text={'ESPRESSO'} />                <Rect text={'LONG BLACK'} />                <Rect text={'ICED LATE'} />            </GestureDetector>        </GestureHandlerRootView>    );};const styles = StyleSheet.create({    container: {        flex: 1,        width: '100%',        height: '100%',    },});