import { ReactNode } from 'react';import { Data, useDragndropContext } from '@/components/drag-drop/context';import { Gesture, GestureDetector } from 'react-native-gesture-handler';import { Animated, Dimensions } from 'react-native';const OFFSET = 275;export const DragndropStartPoint = (    {        children,        data,    }: {        children: ReactNode;        data: Data;    }) => {    const { pos, onDragStart, onDragEnd } = useDragndropContext();    const dragGesture = Gesture.Pan()        .onStart(() => {            onDragStart(data);        })        .onUpdate((evt) => {            const { absoluteX, absoluteY} = evt;            console.log('evt:', absoluteX, absoluteY);            pos.x.setValue(absoluteX);            pos.y.setValue(absoluteY - OFFSET);        })        .onEnd(() => {            const convert = (value: Animated.Value) => Number(JSON.stringify(value));            onDragEnd({ x: convert(pos.x), y: convert(pos.y) + OFFSET });            console.log('onEnd:', convert(pos.x), convert(pos.y));        })        .runOnJS(true);    return (        <GestureDetector gesture={dragGesture} >            {children}        </GestureDetector >    );};